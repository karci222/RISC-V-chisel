package pipelineRV32I

import chisel3._

class PipelineTop() extends Module(){
   val io = IO(new Bundle{
     val res = Output(UInt(32.W))
   })
   val testVec = Array(
     "b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000010010011".asUInt(32.W),
"b00000000000100000000000100010011".asUInt(32.W),
"b00000000000100000000100100010011".asUInt(32.W),
"b00000000000000000001000110110111".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000001000001000000010110011".asUInt(32.W),
"b11111110001100001001110011100011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000110010100100100010011".asUInt(32.W),
"b00000000000000000000000010010011".asUInt(32.W),
"b00000001100000000000001011100111".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W),
"b00000000000000000000000000010011".asUInt(32.W)
   )

   
   val pipeline = Module(new rv32Ipipeline(testVec))  
   io.res := pipeline.io.res
}

